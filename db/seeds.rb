# encoding: utf-8
# Autogenerated by the db:seed:dump task
# Do not hesitate to tweak this to your needs

Construct.create([
  { :design_id => nil, :name => nil, :seq => nil, :created_at => nil, :updated_at => nil }
], :without_protection => true )



Design.create([
  { :part_id => nil, :protocol_id => nil, :created_at => nil, :updated_at => nil }
], :without_protection => true )



Order.create([
  { :name => nil, :user_id => nil, :vendor => nil, :created_at => nil, :updated_at => nil }
], :without_protection => true )



Organism.create([
  { :name => "Sce", :fullname => "Saccharomyces cerevisiae", :code => 1, :created_at => "2012-11-13 09:58:00", :updated_at => "2012-11-13 09:58:00" },
  { :name => "Eco", :fullname => "Escherichia coli", :code => 2, :created_at => "2012-11-13 09:58:00", :updated_at => "2012-11-13 09:58:00" },
  { :name => "Hsa", :fullname => "Homo sapiens", :code => 3, :created_at => "2012-11-13 09:58:00", :updated_at => "2012-11-13 09:58:00" },
  { :name => "Cel", :fullname => "Caenorhabditis elegans", :code => 4, :created_at => "2012-11-13 09:58:00", :updated_at => "2012-11-13 09:58:00" },
  { :name => "Dme", :fullname => "Drosophila melanogaster", :code => 5, :created_at => "2012-11-13 09:58:00", :updated_at => "2012-11-13 09:58:00" },
  { :name => "Bsu", :fullname => "Bacillus subtilis", :code => 6, :created_at => "2012-11-13 09:58:00", :updated_at => "2012-11-13 09:58:00" }
], :without_protection => true )



Part.create([
  { :name => nil, :created_at => nil, :updated_at => nil }
], :without_protection => true )



Protocol.create([
  { :name => "v1.0", :int_prefix => "CGTCTCA", :int_suffix => "TGAGACG", :overlap => "AAAT,AAAC,AAAG,AATA,AATC,AACA,AACT,AACC,AACG,AAGA,AAGT,AAGC,AAGG,ATAA,ATAC,ATAG,ATTA,ATTC,ATTG,ATCA,ATCT,ATCG,ATGA,ATGT,ATGC,ATGG,ACAA,ACAC,ACAG,ACTA,ACTC,ACCA,ACCT,ACCC,ACCG,ACGA,ACGC,ACGG,AGAA,AGAC,AGAG,AGTA,AGTC,AGTG,AGCA,AGCC,AGCG,AGGA,AGGC,AGGG,TAAA,TAAG,TATC,TATG,TACA,TACC,TACG,TAGA,TAGC,TAGG,TTAC,TTAG,TTTC,TTTG,TTCA,TTCC,TTCG,TTGA,TTGC,TTGG,TCAC,TCAG,TCTC,TCTG,TCCA,TCCC,TCCG,TCGC,TCGG,TGAC,TGTC,TGTG,TGCC,TGCG,TGGC,TGGG,CAAC,CAAG,CATC,CACC,CACG,CAGC,CAGG,CTAC,CTTC,CTCC,CTCG,CTGC,CTGG,CCAC,CCTC,CCCC,CCCG,CCGC,CGAC,CGTC,CGCC,CGGC,GAAC,GACC,GAGC,GTCC,GTGC,GCCC", :construct_size => 1178, :rs_enz => "BsaI:BsmBI:BceAI:SalI:XhoI", :created_at => "2012-11-13 15:32:50", :updated_at => "2012-11-13 15:32:50", :ext_prefix => "CGTCTCAA", :ext_suffix => "TGAGCGAGACGTATGCCGT", :organism_id => 1 }
], :without_protection => true )



Sequence.create([
  { :accession => nil, :organism_id => nil, :part_id => nil, :seq => nil, :annotation => nil, :created_at => nil, :updated_at => nil }
], :without_protection => true )



User.create([
  { :uid => "https://www.google.com/accounts/o8/id?id=AItOawnkuXVO04qZO5aXN0Py1G5ngYDlVTUBPFY", :fullname => "Kun Yang", :email => "cleo.k.yang@gmail.com", :provider => "google", :created_at => "2012-11-09 21:13:19", :updated_at => "2012-11-09 21:13:19" }
], :without_protection => true )


